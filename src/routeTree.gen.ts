/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ResponsesFom_idIndexRouteImport } from './routes/responses/fom_id/index'
import { Route as PreviewForm_idIndexRouteImport } from './routes/preview/form_id/index'
import { Route as BuilderForm_idIndexRouteImport } from './routes/builder/form_id/index'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ResponsesFom_idIndexRoute = ResponsesFom_idIndexRouteImport.update({
  id: '/responses/fom_id/',
  path: '/responses/fom_id/',
  getParentRoute: () => rootRouteImport,
} as any)
const PreviewForm_idIndexRoute = PreviewForm_idIndexRouteImport.update({
  id: '/preview/form_id/',
  path: '/preview/form_id/',
  getParentRoute: () => rootRouteImport,
} as any)
const BuilderForm_idIndexRoute = BuilderForm_idIndexRouteImport.update({
  id: '/builder/form_id/',
  path: '/builder/form_id/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/builder/form_id': typeof BuilderForm_idIndexRoute
  '/preview/form_id': typeof PreviewForm_idIndexRoute
  '/responses/fom_id': typeof ResponsesFom_idIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/builder/form_id': typeof BuilderForm_idIndexRoute
  '/preview/form_id': typeof PreviewForm_idIndexRoute
  '/responses/fom_id': typeof ResponsesFom_idIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/builder/form_id/': typeof BuilderForm_idIndexRoute
  '/preview/form_id/': typeof PreviewForm_idIndexRoute
  '/responses/fom_id/': typeof ResponsesFom_idIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/builder/form_id' | '/preview/form_id' | '/responses/fom_id'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/builder/form_id' | '/preview/form_id' | '/responses/fom_id'
  id:
    | '__root__'
    | '/'
    | '/builder/form_id/'
    | '/preview/form_id/'
    | '/responses/fom_id/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  BuilderForm_idIndexRoute: typeof BuilderForm_idIndexRoute
  PreviewForm_idIndexRoute: typeof PreviewForm_idIndexRoute
  ResponsesFom_idIndexRoute: typeof ResponsesFom_idIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/responses/fom_id/': {
      id: '/responses/fom_id/'
      path: '/responses/fom_id'
      fullPath: '/responses/fom_id'
      preLoaderRoute: typeof ResponsesFom_idIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/preview/form_id/': {
      id: '/preview/form_id/'
      path: '/preview/form_id'
      fullPath: '/preview/form_id'
      preLoaderRoute: typeof PreviewForm_idIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/builder/form_id/': {
      id: '/builder/form_id/'
      path: '/builder/form_id'
      fullPath: '/builder/form_id'
      preLoaderRoute: typeof BuilderForm_idIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  BuilderForm_idIndexRoute: BuilderForm_idIndexRoute,
  PreviewForm_idIndexRoute: PreviewForm_idIndexRoute,
  ResponsesFom_idIndexRoute: ResponsesFom_idIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
